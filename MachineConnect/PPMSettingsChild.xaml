<UserControl x:Class="MachineConnectOEM.PPMSettingsChild"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MachineConnectOEM"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1400" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <Style x:Key="HdrlabelStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="FontSize" Value="22"></Setter>
            <Setter Property="FontWeight" Value="ExtraBold"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI Semibold"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>

        </Style>
        <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
            <Setter Property="TextBlock.TextAlignment" Value="Center"></Setter>
            <Setter Property="Background" Value="#1F497D"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="BorderBrush" Value="White"></Setter>
            <Setter Property="BorderThickness" Value="0.5"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI Semibold"></Setter>
        </Style>

        <Style x:Key="WrappedColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="#2080D0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="0.7"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </UserControl.Resources>

    <Grid  Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="5"></RowDefinition>
            <RowDefinition Height="35" ></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="45"></RowDefinition>
        </Grid.RowDefinitions>

        <Label Grid.Row="1" Content="PROCESS PARAMETERS CONFIGURATION" Style="{StaticResource HdrlabelStyle}" ></Label>
        <DataGrid Grid.Row="2" Name="DataGridMGT" CanUserResizeRows="False" IsReadOnly="False" BorderThickness="0" ColumnHeaderHeight="50"  VerticalGridLinesBrush="#2080D0" HorizontalGridLinesBrush="#2080D0" CanUserDeleteRows="False" MinRowHeight="35" CanUserResizeColumns="False" HeadersVisibility="Column" AreRowDetailsFrozen="False" AllowDrop="False" UseLayoutRounding="True" SnapsToDevicePixels="True" AutoGenerateColumns="False" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}" FrozenColumnCount="3" CanUserReorderColumns="False" CanUserAddRows="False" SelectionMode="Single" SelectionUnit="FullRow" IsSynchronizedWithCurrentItem="True">

            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="FontWeight"  Value="Bold" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Height" Value="40"/>
                    <Setter Property="Background" Value="#2080D0"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="White"/>
                    <Setter Property="BorderThickness" Value="0.7"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property="FontFamily" Value="Segoe UI"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="FontSize"  Value="15" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding color}" Value="1">
                            <DataTrigger.Setters>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" Opacity="0.9">
                                            <GradientStop Color="White" Offset="0.0" />
                                            <GradientStop Color="#A6FF0000" Offset="0.1" />
                                            <GradientStop Color="#FF4500" Offset="0.1" />
                                            <GradientStop Color="White" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.RowHeaderStyle>
                <Style TargetType="DataGridRowHeader">
                    <Setter Property="FontSize" Value="10"/>
                    <Setter Property="Background" Value="LightCyan"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.RowHeaderStyle>

            <DataGrid.Columns>
                <DataGridTextColumn Header="SL No." Binding="{Binding SerialNum}" Width="*" MinWidth="60" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="PARAMETER ID" Width="*" MinWidth="130">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" TextAlignment="Center" HorizontalAlignment="Center" Text="{Binding ParameterId, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox x:Name="cmbParameterId" Height="30" SelectedItem="{Binding ParameterId, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Loaded="cmbParameterId_Loaded" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="PARAMETER NAME" x:Name="PrmName" Binding="{Binding Path=ParameterName,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  MinWidth="250" Width="*" IsReadOnly="false" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="DISPLAY TEXT" Binding="{Binding DisplayText, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="*" IsReadOnly="False" MinWidth="250">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="Minimum" Width="*" MinWidth="120">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding LowerValue, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding LowerValue, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" PreviewTextInput="TextBlockDecimal_PreviewTextInput" TextAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Maximum" Width="*" MinWidth="120">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding HigherValue, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding HigherValue, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" PreviewTextInput="TextBlockDecimal_PreviewTextInput" TextAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="GROUP ID" Width="*" MinWidth="150">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" TextAlignment="Center" HorizontalAlignment="Center" Text="{Binding GroupId, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox x:Name="cmb" Height="30" SelectedItem="{Binding GroupId, NotifyOnTargetUpdated=True,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Loaded="cmb_Loaded" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Frequency ID" Width="*" MinWidth="150">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" TextAlignment="Center" HorizontalAlignment="Center" Text="{Binding Freqency, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox x:Name="cmbFreq" Height="30" SelectedItem="{Binding Freqency, NotifyOnTargetUpdated=True,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Loaded="cmbFreq_Loaded" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Template Type" Width="*" MinWidth="120" IsReadOnly="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" TextAlignment="Center" HorizontalAlignment="Center" Text="{Binding TemplateType, NotifyOnTargetUpdated=True,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox x:Name="cmbtemplateType" Height="30" SelectedItem="{Binding TemplateType, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Loaded="cmbtemplateType_Loaded"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>


                <DataGridTemplateColumn Header="DB DATATYPE" Width="*" MinWidth="120" IsReadOnly="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" TextAlignment="Center" HorizontalAlignment="Center" Text="{Binding DBDataType, NotifyOnTargetUpdated=True,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox x:Name="cmbDBDatatype" Height="30" SelectedItem="{Binding DBDataType, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Loaded="cmbDBDatatype_Loaded"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Register NAME" x:Name="txtPrm" Binding="{Binding Path=Register,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  MinWidth="250" Width="*" IsReadOnly="false" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="UNIT" Binding="{Binding Unit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="*" MinWidth="30">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="HIGH RED LIMIT" Width="*" MinWidth="140">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding HighRedLimit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding HighRedLimit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" PreviewTextInput="TextBlockDecimal_PreviewTextInput" TextAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Low RED LIMIT" Width="*" MinWidth="140">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding LowRedLimit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding LowRedLimit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" PreviewTextInput="TextBlockDecimal_PreviewTextInput" TextAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="HIGH Green LIMIT" Width="*" MinWidth="140">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding HighGreenLimit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding HighGreenLimit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" PreviewTextInput="TextBlockDecimal_PreviewTextInput" TextAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Low Green LIMIT" Width="*" MinWidth="140">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding LowGreenLimit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding LowGreenLimit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" PreviewTextInput="TextBlockDecimal_PreviewTextInput" TextAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="HIGH Yellow LIMIT" Width="*" MinWidth="140">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding HighYellowLimit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding HighYellowLimit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" PreviewTextInput="TextBlockDecimal_PreviewTextInput" TextAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Low Yellow LIMIT" Width="*" MinWidth="140">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding LowYellowLimit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding LowYellowLimit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" PreviewTextInput="TextBlockDecimal_PreviewTextInput" TextAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridCheckBoxColumn Header="VISIBLE" Width="*" MinWidth="30" Binding="{Binding IsVisible, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>

                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>

                <DataGridTextColumn Header="SORT ORDER" Binding="{Binding SortOrder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="*" MinWidth="120" IsReadOnly="False">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="Divide By" Width="*" MinWidth="120" IsReadOnly="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" TextAlignment="Center" HorizontalAlignment="Center" Text="{Binding DivideBy, NotifyOnTargetUpdated=True,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox x:Name="cmbDivideBy" Height="30" SelectedItem="{Binding DivideBy, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Loaded="cmbDivideBy_Loaded"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Name="btnNew" Content ="New" Width="100" HorizontalAlignment="Right" Style="{StaticResource buttonStyle}" Margin="3" Click="btnNew_Click"/>
            <Button Name="btnSave" Content ="Save" Width="100" HorizontalAlignment="Right" Style="{StaticResource buttonStyle}" Margin="3" Click="btnSave_Click"/>
            <Button Name="btnDelete" Content ="Delete" Width="100" HorizontalAlignment="Right" Style="{StaticResource buttonStyle}" Margin="3" Click="btnDelete_Click"/>
        </StackPanel>
    </Grid>
</UserControl>
