<UserControl x:Class="MachineConnectOEM.PRGPage"  
             xmlns:local="clr-namespace:MachineConnectOEM"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
              d:DesignHeight="435" d:DesignWidth="1400"  FontFamily="Segoe UI" Loaded="UserControl_Loaded" Background="White">

    <UserControl.Resources>
        <Style x:Key="HdrlabelStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="FontSize" Value="22"></Setter>
            <Setter Property="FontWeight" Value="ExtraBold"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI Semibold"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>

        </Style>
        <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
            <Setter Property="TextBlock.TextAlignment" Value="Center"></Setter>
            <Setter Property="Background" Value="#1F497D"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="BorderBrush" Value="White"></Setter>
            <Setter Property="BorderThickness" Value="0.5"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI Semibold"></Setter>
        </Style>

        <Style x:Key="WrappedColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="FontWeight"  Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="#2080D0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="0.7"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight"  Value="Bold" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </UserControl.Resources>

    <Grid  Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="5"></RowDefinition>
            <RowDefinition Height="35" ></RowDefinition>
            <RowDefinition Height="5"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="45"></RowDefinition>
        </Grid.RowDefinitions>

        <Label Grid.Row="1" Content="PROCESS PARAMETERS CONFIGURATION" Style="{StaticResource HdrlabelStyle}" ></Label>

        <DataGrid Grid.Row="3" Name="DataGridMGT" CanUserResizeRows="False" IsReadOnly="False" BorderThickness="0" ColumnHeaderHeight="50"  VerticalGridLinesBrush="#2080D0" HorizontalGridLinesBrush="#2080D0" CanUserDeleteRows="False" MinRowHeight="35" CanUserResizeColumns="False" HeadersVisibility="Column" AreRowDetailsFrozen="False" AllowDrop="False" UseLayoutRounding="True" SnapsToDevicePixels="True" AutoGenerateColumns="False" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}" FrozenColumnCount="3" CanUserReorderColumns="False" CanUserAddRows="False" SelectionUnit="FullRow">

            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="FontWeight"  Value="Bold" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                    <Setter Property="Height" Value="40"/>
                    <Setter Property="Background" Value="#2080D0"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="White"/>
                    <Setter Property="BorderThickness" Value="0.7"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="FontWeight"  Value="Bold" />
                </Style>
            </DataGrid.ColumnHeaderStyle>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="FontSize"  Value="15" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding color}" Value="1">
                            <DataTrigger.Setters>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" Opacity="0.9">
                                            <GradientStop Color="White" Offset="0.0" />
                                            <GradientStop Color="#A6FF0000" Offset="0.1" />
                                            <GradientStop Color="#FF4500" Offset="0.1" />
                                            <GradientStop Color="White" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.RowHeaderStyle>
                <Style TargetType="DataGridRowHeader">
                    <Setter Property="FontSize" Value="10"/>
                    <Setter Property="Background" Value="LightCyan"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.RowHeaderStyle>

            <DataGrid.Columns>
                <DataGridTextColumn Header=" SL No. " Binding="{Binding SerialNum}" Width="110" IsReadOnly="True"/>
                <DataGridTextColumn Header="  PARAMETER ID  " Binding="{Binding ParameterId}" Width="auto" IsReadOnly="False"/>
                <DataGridTextColumn Header=" PARAMETER " Binding="{Binding ParameterName, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MinWidth="250" Width="*" IsReadOnly="False"/>
                <DataGridTextColumn Header="  MIN VALUE  " Binding="{Binding MinValue, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="auto"/>
                <DataGridTextColumn Header="  MAX VALUE  " Binding="{Binding MaxValue, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="auto"/>
                <DataGridTextColumn Header="  WARNING VALUE  " Binding="{Binding WarningValue, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="auto" Visibility="Hidden"/>
                <DataGridTextColumn Header="  RED BIT  " Binding="{Binding RedBit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="auto"/>
                <DataGridTextColumn Header="  RED VALUE  " Binding="{Binding RedValue, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="auto">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Background" Value="Red"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="  GREEN BIT  " Binding="{Binding GreenBit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="auto"/>
                <DataGridTextColumn Header="  GREEN VALUE  " Binding="{Binding GreenValue, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="auto">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Background" Value="Green"></Setter>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="  YELLOW BIT  " Binding="{Binding YellowBit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="auto"/>
                <DataGridTextColumn Header="  YELLOW VALUE  " Binding="{Binding YellowValue, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="auto">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Background" Value="Yellow"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="  RED LIMIT  " Binding="{Binding Red1Bit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="auto"/>
                <DataGridTextColumn Header=" RED LIMIT HIGHER VALUE " Binding="{Binding Red1HValue, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HeaderStyle="{StaticResource WrappedColumnHeaderStyle}" Width="166"/>
                <DataGridTextColumn Header=" RED LIMIT LOWER VALUE " Binding="{Binding Red1LValue, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="160" HeaderStyle="{StaticResource WrappedColumnHeaderStyle}"/>
                <DataGridTextColumn Header="UNIT" Binding="{Binding Unit, NotifyOnTargetUpdated=True ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="100"/>
                <DataGridTemplateColumn Header="Template Type" Width="auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding TemplateType, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox x:Name="comboTemplateType" Height="30" SelectedItem="{Binding TemplateType, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Loaded="comboTemplateType_Loaded"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridCheckBoxColumn Header="Is Visible" Width="120" Binding="{Binding IsVisible, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                <DataGridTextColumn Header=" Sort Order " Binding="{Binding SortOrder}" Width="auto" IsReadOnly="False"/>
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Name="btnNew" Content ="New" Width="100" HorizontalAlignment="Right" Style="{StaticResource buttonStyle}" Margin="3" Click="btnNew_Click"/>
            <Button Name="btnSave" Content ="Save" Width="100" HorizontalAlignment="Right" Style="{StaticResource buttonStyle}" Margin="3" Click="btnSave_Click"/>
            <Button Name="btnDelete" Content ="Delete" Width="100" HorizontalAlignment="Right" Style="{StaticResource buttonStyle}" Margin="3" Click="btnDelete_Click"/>
        </StackPanel>
    </Grid>
</UserControl>
